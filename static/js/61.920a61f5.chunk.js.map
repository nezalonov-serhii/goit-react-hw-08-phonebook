{"version":3,"file":"static/js/61.920a61f5.chunk.js","mappings":"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","sources":["components/ContactList/Filter/Filter.styled.js","components/ContactList/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const WrapFilter = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n\n  background-color: rgb(51, 51, 51);\n  padding: 10px 30px;\n\n  @media screen and (min-width: 1280px) {\n    width: 600px;\n    margin: 0 auto;\n  }\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  color: #fff;\n\n  @media screen and (max-width: 400px) {\n    gap: 8px;\n    flex-direction: column;\n  }\n\n  & input {\n    width: 100%;\n    flex: 1 1 0;\n    padding-left: 8px;\n    border: none;\n    background-color: transparent;\n    color: #fff;\n    border-bottom: 1px solid #fff;\n\n    font-size: 16px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { getVisibleContact } from 'redux/filterSlice/filterSlice';\n\nimport { Label, WrapFilter } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const filter = useSelector(state => state.filterValue);\n\n  return (\n    <WrapFilter>\n      <Label>\n        Find contacts by name\n        <input\n          type=\"text\"\n          value={filter}\n          onChange={e => dispatch(getVisibleContact(e.target.value))}\n          placeholder=\"search\"\n        />\n      </Label>\n    </WrapFilter>\n  );\n}\n\nexport default Filter;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ContactsWrap = styled.div`\n  margin: 0 auto;\n  border-radius: 10px;\n  overflow: hidden;\n  box-shadow: rgb(150, 150, 150) 10px 10px 20px;\n\n  @media screen and (min-width: 1280px) {\n    width: 600px;\n    margin: 0 auto;\n  }\n`;\n\nexport const AddLink = styled(Link)`\n  color: rgb(0, 177, 163);\n`;\n\nexport const WelcomeMessage = styled.p`\n  text-align: center;\n`;\n\nexport const ContactContainer = styled.div`\n  box-sizing: border-box;\n  width: 100%;\n  padding: 20px 30px;\n\n  background-color: #fff;\n\n  @media screen and (min-width: 1280px) {\n    width: 600px;\n    margin: 0 auto;\n  }\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  /* border-bottom: 1px solid black; */\n  padding: 5px 10px;\n\n  background-color: rgb(51, 51, 51);\n  border-radius: 8px;\n  color: #fff;\n\n  &:not(:last-child) {\n    margin-bottom: 15px;\n  }\n\n  & button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n\n    border: none;\n    padding: 2px 4px;\n    border-radius: 5px;\n    background-color: rgb(51, 51, 51);\n    color: #fff;\n\n    transition: background-color 250ms linear;\n\n    & svg {\n      width: 30px;\n      height: auto;\n    }\n\n    &:disabled {\n      opacity: 20%;\n    }\n\n    &:hover {\n      background-color: rgb(112 0 0);\n    }\n  }\n`;\n\nexport const ContactWrap = styled.div`\n  display: flex;\n  gap: 5px;\n\n  @media screen and (max-width: 480px) {\n    flex-direction: column;\n    font-size: 17px;\n  }\n`;\n\nexport const TelLink = styled.a`\n  border-bottom: solid 1px #fff;\n\n  &:hover {\n    color: rgb(0, 177, 163);\n    border-bottom: solid 1px rgb(0, 177, 163);\n  }\n`;\n\nexport const ButtonsWrap = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { TiDeleteOutline } from 'react-icons/ti';\nimport { toast } from 'react-toastify';\nimport { motion } from 'framer-motion';\n\nimport Filter from './Filter/Filter';\nimport Loader from 'components/Loader/Loader';\n\nimport { deleteContactThunk } from 'redux/thunk/contactsThunk';\n\nimport {\n  selectContacts,\n  selectFilter,\n  selectIsLoading,\n  selectIsRefreshing,\n  selectUser,\n} from 'redux/selector/selectors';\n\nimport {\n  AddLink,\n  ButtonsWrap,\n  ContactContainer,\n  ContactWrap,\n  ContactsWrap,\n  Item,\n  TelLink,\n  WelcomeMessage,\n} from './ContactList.styled';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const isLoading = useSelector(selectIsLoading);\n  const user = useSelector(selectUser);\n  const isRefreshing = useSelector(selectIsRefreshing);\n\n  const isContactsEmpty = Boolean(contacts.length);\n  const normalizeFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(el =>\n    el.name.toLowerCase().includes(normalizeFilter)\n  );\n\n  const handelDelete = id => {\n    dispatch(deleteContactThunk(id))\n      .unwrap()\n      .then(user => {\n        toast.success(`${user.name} removed from contacts.`);\n      })\n      .catch(() => toast.error('Sorry something went wrong try again'));\n  };\n\n  return (\n    <motion.div\n      initial={{ opacity: 0, scale: 0.75 }}\n      animate={{ opacity: 1, scale: 1 }}\n      transition={{\n        duration: 0.8,\n        delay: 0.2,\n        ease: [0, 0.71, 0.2, 1.01],\n      }}\n    >\n      {(isRefreshing || isLoading) && !isContactsEmpty && <Loader />}\n      <ContactsWrap>\n        {!isContactsEmpty && !isRefreshing && !isLoading && (\n          <motion.div\n            initial={{ opacity: 0, scale: 0.75 }}\n            animate={{ opacity: 1, scale: 1 }}\n            transition={{\n              duration: 0.8,\n              delay: 0.2,\n              ease: [0, 0.71, 0.2, 1.01],\n            }}\n          >\n            <ContactContainer>\n              <WelcomeMessage>\n                Hello {user.name} please{' '}\n                {<AddLink to=\"/phone-book/add\">add</AddLink>} your first contact\n              </WelcomeMessage>\n            </ContactContainer>\n          </motion.div>\n        )}\n\n        {isContactsEmpty && (\n          <>\n            <Filter />\n            <ContactContainer>\n              {!visibleContacts.length && <p>No matches</p>}\n              {visibleContacts && (\n                <ul>\n                  {visibleContacts.map(({ id, name, number }) => {\n                    return (\n                      <Item key={id}>\n                        <ContactWrap>\n                          <p>{name}: </p>{' '}\n                          <TelLink href={`tel:${number}`}>{number}</TelLink>\n                        </ContactWrap>\n                        <ButtonsWrap>\n                          {isLoading && <Loader size={'30'} />}\n                          <button\n                            type=\"button\"\n                            onClick={() => {\n                              handelDelete(id);\n                            }}\n                            disabled={isLoading}\n                          >\n                            <TiDeleteOutline />\n                          </button>\n                        </ButtonsWrap>\n                      </Item>\n                    );\n                  })}\n                </ul>\n              )}\n            </ContactContainer>\n          </>\n        )}\n      </ContactsWrap>\n    </motion.div>\n  );\n}\n\nexport default ContactList;\n"],"names":["WrapFilter","styled","Label","dispatch","useDispatch","filter","useSelector","state","filterValue","type","value","onChange","e","getVisibleContact","target","placeholder","ContactsWrap","AddLink","Link","WelcomeMessage","ContactContainer","Item","ContactWrap","TelLink","ButtonsWrap","contacts","selectContacts","selectFilter","isLoading","selectIsLoading","user","selectUser","isRefreshing","selectIsRefreshing","isContactsEmpty","Boolean","length","normalizeFilter","toLowerCase","visibleContacts","el","name","includes","motion","initial","opacity","scale","animate","transition","duration","delay","ease","Loader","to","map","id","number","href","size","onClick","deleteContactThunk","unwrap","then","toast","catch","handelDelete","disabled"],"sourceRoot":""}