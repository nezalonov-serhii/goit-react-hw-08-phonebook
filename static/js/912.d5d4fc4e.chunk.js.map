{"version":3,"file":"static/js/912.d5d4fc4e.chunk.js","mappings":"oRAEaA,EAAeC,EAAAA,GAAAA,QAAH,+CAIZC,EAAOD,EAAAA,GAAAA,KAAH,6lC,UC4FjB,EAvFc,WACZ,OAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAgBC,EAAAA,EAAAA,aAAYC,EAAAA,qBAC5BC,GAAWC,EAAAA,EAAAA,eAEXC,EAAoB,SAACC,EAAOC,GAChC,OAAQA,GACN,IAAK,QACHV,EAASS,GACT,MAEF,IAAK,WACHP,EAAYO,GACZ,MAEF,QACE,OAEL,EAwBKE,EAAY,WAChBX,EAAS,IACTE,EAAY,GACb,EAED,OACE,SAACP,EAAD,WACE,UAACE,EAAD,CAAMe,SA7BW,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAO,CACXhB,MAAAA,EACAE,SAAAA,GAGFK,GAASU,EAAAA,EAAAA,IAAWD,IACjBE,SACAC,MAAK,YAAe,IAAZH,EAAW,EAAXA,KACPI,EAAAA,GAAAA,QAAA,UAAiBJ,EAAKL,KAAtB,2CACD,IACAU,OAAM,SAAAC,GACLF,EAAAA,GAAAA,MACE,yEAEH,IAEHR,GACD,EASG,WACE,6DACA,4BACE,kBACEW,UAAQ,EACRC,KAAK,QACLC,YAAY,QACZf,MAAOV,EACPW,KAAK,QACLe,SAAU,SAAAZ,GACRL,EAAkBK,EAAEa,OAAOjB,MAAOI,EAAEa,OAAOhB,KAC5C,OAGL,4BACE,kBACEY,UAAQ,EACRC,KAAK,WACLC,YAAY,WACZf,MAAOR,EACPS,KAAK,WACLiB,aAAa,MACbF,SAAU,SAAAZ,GACRL,EAAkBK,EAAEa,OAAOjB,MAAOI,EAAEa,OAAOhB,KAC5C,OAGL,oBAAQa,KAAK,SAASK,SAAUzB,EAAhC,UACGA,IAAiB,SAAC0B,EAAA,EAAD,CAAQC,KAAK,QAC7B3B,IAAiB,6CAK5B,C","sources":["page/Auth/Login/Login.styled.js","page/Auth/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoginSection = styled.section`\n  padding: 40px 15px;\n`;\n\nexport const Form = styled.form`\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding: 30px 30px;\n\n  border-radius: 10px;\n  background-color: #fff;\n  box-shadow: rgb(150, 150, 150) 10px 10px 20px;\n\n  @media screen and (min-width: 480px) {\n    width: 450px;\n    margin: 0 auto;\n    padding: 40px 50px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 30%;\n  }\n\n  & h2 {\n    display: block;\n    font-size: 18px;\n    margin-bottom: 15px;\n  }\n\n  & label {\n    display: flex;\n    /* flex-direction: column; */\n    align-items: center;\n    margin-bottom: 30px;\n  }\n  & input {\n    font-size: 16px;\n    border: none;\n    border-bottom: 1px solid #000;\n    width: 100%;\n  }\n\n  & button {\n    border: none;\n    padding: 8px 10px;\n    border-radius: 5px;\n    background-color: rgb(255, 248, 0);\n    font-size: 16px;\n    box-shadow: rgb(150, 150, 150) 5px 5px 10px;\n\n    transition: all 250ms linear;\n    &:hover {\n      color: #fff;\n      background-color: rgb(0, 177, 163);\n    }\n\n    &:disabled {\n      opacity: 50%;\n    }\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\n\nimport Loader from 'components/Loader/Loader';\n\nimport { loginThunk } from 'redux/thunk/contactsThunk';\nimport { selectIsAuthLoading } from 'redux/selector/selectors';\n\nimport { Form, LoginSection } from './Login.styled';\n\nconst Login = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const isAuthLoading = useSelector(selectIsAuthLoading);\n  const dispatch = useDispatch();\n\n  const handleInputChange = (value, name) => {\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const user = {\n      email,\n      password,\n    };\n\n    dispatch(loginThunk(user))\n      .unwrap()\n      .then(({ user }) => {\n        toast.success(`${user.name} hello, you have successfully logged in`);\n      })\n      .catch(error => {\n        toast.error(\n          'Sorry, try again, this user was not found or the password is incorrect'\n        );\n      });\n\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <LoginSection>\n      <Form onSubmit={handleSubmit}>\n        <h2>Please enter Email and Password</h2>\n        <label>\n          <input\n            required\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            name=\"email\"\n            onChange={e => {\n              handleInputChange(e.target.value, e.target.name);\n            }}\n          />\n        </label>\n        <label>\n          <input\n            required\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password}\n            name=\"password\"\n            autoComplete=\"off\"\n            onChange={e => {\n              handleInputChange(e.target.value, e.target.name);\n            }}\n          />\n        </label>\n        <button type=\"submit\" disabled={isAuthLoading}>\n          {isAuthLoading && <Loader size=\"20\" />}\n          {!isAuthLoading && <span>Sign in</span>}\n        </button>\n      </Form>\n    </LoginSection>\n  );\n};\n\nexport default Login;\n"],"names":["LoginSection","styled","Form","useState","email","setEmail","password","setPassword","isAuthLoading","useSelector","selectIsAuthLoading","dispatch","useDispatch","handleInputChange","value","name","resetForm","onSubmit","e","preventDefault","user","loginThunk","unwrap","then","toast","catch","error","required","type","placeholder","onChange","target","autoComplete","disabled","Loader","size"],"sourceRoot":""}